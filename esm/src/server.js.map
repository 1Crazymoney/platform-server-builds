{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,gBAAgB,EAAC,MAAM,iBAAiB;OACzC,EAAgD,mBAAmB,EAAC,MAAM,mBAAmB;OAC7F,EAA+B,QAAQ,EAAE,oBAAoB,EAAqB,qBAAqB,EAAE,YAAY,EAAC,MAAM,eAAe;OAC3I,EAAC,aAAa,EAAC,MAAM,2BAA2B;OAEhD,EAA6C,OAAO,EAAC,MAAM,iBAAiB;OAE5E,EAAC,gBAAgB,EAAC,MAAM,kBAAkB;AAEjD,sBAAsB,OAAe;IACnC,MAAM,IAAI,KAAK,CAAC,qCAAqC,OAAO,IAAI,CAAC,CAAC;AACpE,CAAC;AAED,qCAAqC,gBAAgB;IACnD,kBAAkB,KAAa,MAAM,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;IAC1E,UAAU,CAAC,EAAO,IAAU,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;IACzD,YAAY,CAAC,EAAO,IAAU,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAC7D,IAAI,QAAQ,KAAa,MAAM,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1D,IAAI,MAAM,KAAa,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,KAAa,MAAM,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,CAAC,KAAU,EAAE,KAAa,EAAE,GAAW,IAAU,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAC5F,SAAS,CAAC,KAAU,EAAE,KAAa,EAAE,GAAW,IAAU,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;IACtF,OAAO,KAAW,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;IAC5C,IAAI,KAAW,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AACxC,CAAC;AAED,OAAO,MAAM,kCAAkC,GAA2C;IACxF,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAC;IACzE,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAC;CAC9D,CAAC;AAEF;IACE,gBAAgB,CAAC,WAAW,EAAE,CAAC;IAC/B,OAAO,EAAE,CAAC;AACZ,CAAC;AACD;AAKA,CAAC;AAJD,kBAAkB;AACX,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAC,OAAO,EAAE,CAAC,aAAa,CAAC,EAAC,EAAG,EAAE;CACvD,CACA;AAED;;GAEG;AACH,OAAO,MAAM,cAAc,GACvB,qBAAqB,CAAC,YAAY,EAAE,QAAQ,EAAE,kCAAkC,CAAC,CAAC;AAEtF;;;;GAIG;AACH,OAAO,MAAM,qBAAqB,GAC9B,qBAAqB,CAAC,mBAAmB,EAAE,eAAe,EAAE,kCAAkC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common';\nimport {analyzeAppProvidersForDeprecatedConfiguration, platformCoreDynamic} from '@angular/compiler';\nimport {ApplicationRef, ComponentRef, NgModule, PLATFORM_INITIALIZER, PlatformRef, Type, createPlatformFactory, platformCore} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {Console, ReflectionCapabilities, reflector, wtfInit} from '../core_private';\n\nimport {Parse5DomAdapter} from './parse5_adapter';\n\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nclass ServerPlatformLocation extends PlatformLocation {\n  getBaseHrefFromDOM(): string { throw notSupported('getBaseHrefFromDOM'); };\n  onPopState(fn: any): void { notSupported('onPopState'); };\n  onHashChange(fn: any): void { notSupported('onHashChange'); };\n  get pathname(): string { throw notSupported('pathname'); }\n  get search(): string { throw notSupported('search'); }\n  get hash(): string { throw notSupported('hash'); }\n  replaceState(state: any, title: string, url: string): void { notSupported('replaceState'); };\n  pushState(state: any, title: string, url: string): void { notSupported('pushState'); };\n  forward(): void { notSupported('forward'); };\n  back(): void { notSupported('back'); };\n}\n\nexport const INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: PLATFORM_INITIALIZER, useValue: initParse5Adapter, multi: true},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation},\n];\n\nfunction initParse5Adapter() {\n  Parse5DomAdapter.makeCurrent();\n  wtfInit();\n}\nexport class ServerModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [BrowserModule]}, ] },\n];\n}\n\n/**\n * @experimental\n */\nexport const platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}