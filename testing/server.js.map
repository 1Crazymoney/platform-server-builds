{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-server/testing/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,qBAA4M,eAAe,CAAC,CAAA;AAC5N,wBAA0H,2CAA2C,CAAC,CAAA;AAEtK,+BAA+B,uBAAuB,CAAC,CAAA;AAEvD;IACE,iCAAgB,CAAC,WAAW,EAAE,CAAC;AACjC,CAAC;AAED;;GAEG;AACU,sCAA8B;AACvC,kBAAkB,CAAA;IAChB,gCAAyB;IACzB,qBAAqB,CAAC,EAAC,OAAO,EAAE,2BAAoB,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAC;IAC7F,EAAC,OAAO,EAAE,sBAAe,EAAE,QAAQ,EAAE,+CAAqC,EAAC;CAC5E,CAAC;AAEN;;;;GAIG;AACU,0BAAkB,GAC3B,4BAAqB,CAAC,YAAY,EAAE,sCAA8B,CAAC,CAAC;AACxE;IAAA;IAKA,CAAC;IAJD,kBAAkB;IACX,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC,EAAC,OAAO,EAAE,CAAC,kCAAwB,CAAC,EAAC,EAAG,EAAE;KACnE,CAAC;IACF,uBAAC;AAAD,CAAC,AALD,IAKC;AALY,wBAAgB,mBAK5B,CAAA;AAED;;GAEG;AACU,yCAAiC,GAC1C,oDAA0C,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AppModule, CompilerFactory, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, assertPlatform, createPlatform, createPlatformFactory, getPlatform} from '@angular/core';\nimport {BROWSER_DYNAMIC_TEST_COMPILER_FACTORY, BrowserDynamicTestModule, TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS} from '@angular/platform-browser-dynamic/testing';\n\nimport {Parse5DomAdapter} from '../src/parse5_adapter';\n\nfunction initServerTests() {\n  Parse5DomAdapter.makeCurrent();\n}\n\n/**\n * @deprecated Use initTestEnvironment with serverTestPlatform instead.\n */\nexport const TEST_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      PLATFORM_COMMON_PROVIDERS,\n      /*@ts2dart_Provider*/ {provide: PLATFORM_INITIALIZER, useValue: initServerTests, multi: true},\n      {provide: CompilerFactory, useValue: BROWSER_DYNAMIC_TEST_COMPILER_FACTORY},\n    ];\n\n/**\n * Platform for testing\n *\n * @experimental API related to bootstrapping are still under review.\n */\nexport const serverTestPlatform =\n    createPlatformFactory('serverTest', TEST_SERVER_PLATFORM_PROVIDERS);\nexport class ServerTestModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{modules: [BrowserDynamicTestModule]}, ] },\n];\n}\n\n/**\n * @deprecated Use initTestEnvironment with ServerTestModule instead.\n */\nexport const TEST_SERVER_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}