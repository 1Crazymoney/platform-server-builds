{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-server/testing/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,SAAS,EAAE,WAAW,EAAE,yBAAyB,EAAE,oBAAoB,EAAe,kBAAkB,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAAC,MAAM,eAAe;OAC5K,EAAC,wBAAwB,EAAE,mBAAmB,EAAC,MAAM,2CAA2C;OAEhG,EAAC,gBAAgB,EAAC,MAAM,uBAAuB;AAEtD,MAAM,2BAA2B,GAAG,IAAI,WAAW,CAAC,0BAA0B,CAAC,CAAC;AAEhF;IACE,gBAAgB,CAAC,WAAW,EAAE,CAAC;AACjC,CAAC;AAED;;;;GAIG;AACH,OAAO,MAAM,kBAAkB,GAAG,mBAAmB,CAAC;AAEtD,MAAM,8BAA8B;AAChC,kBAAkB,CAAA;IAChB,yBAAyB;IACzB,qBAAqB,CAAC,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAC;IAC7F,EAAC,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI,EAAC;CACvD,CAAC;AAEN;;;;GAIG;AACH;IACE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACnB,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,CAAC;IACtF,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC;AACrD,CAAC;AACD;AAKA,CAAC;AAJD,kBAAkB;AACX,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,OAAO,EAAE,CAAC,wBAAwB,CAAC,EAAC,EAAG,EAAE;CACnE,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AppModule, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, assertPlatform, createPlatform, getPlatform} from '@angular/core';\nimport {BrowserDynamicTestModule, browserTestCompiler} from '@angular/platform-browser-dynamic/testing';\n\nimport {Parse5DomAdapter} from '../src/parse5_adapter';\n\nconst SERVER_TEST_PLATFORM_MARKER = new OpaqueToken('ServerTestPlatformMarker');\n\nfunction initServerTests() {\n  Parse5DomAdapter.makeCurrent();\n}\n\n/**\n * Creates a compiler for testing\n *\n * @stable\n */\nexport const serverTestCompiler = browserTestCompiler;\n\nconst TEST_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      PLATFORM_COMMON_PROVIDERS,\n      /*@ts2dart_Provider*/ {provide: PLATFORM_INITIALIZER, useValue: initServerTests, multi: true},\n      {provide: SERVER_TEST_PLATFORM_MARKER, useValue: true}\n    ];\n\n/**\n * Platform for testing\n *\n * @experimental API related to bootstrapping are still under review.\n */\nexport function serverTestPlatform(): PlatformRef {\n  if (!getPlatform()) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(TEST_SERVER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(SERVER_TEST_PLATFORM_MARKER);\n}\nexport class ServerTestModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{modules: [BrowserDynamicTestModule]}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}