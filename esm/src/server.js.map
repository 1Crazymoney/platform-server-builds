{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,gBAAgB,EAAC,MAAM,iBAAiB;OACzC,EAAC,eAAe,EAA6B,yBAAyB,EAAE,oBAAoB,EAAe,kBAAkB,EAAwB,oBAAoB,EAAkB,qBAAqB,EAAc,MAAM,eAAe;OACnP,EAAC,qCAAqC,EAAC,MAAM,2CAA2C;OAExF,EAAC,sBAAsB,EAAE,SAAS,EAAE,OAAO,EAAC,MAAM,iBAAiB;OAEnE,EAAC,gBAAgB,EAAC,MAAM,kBAAkB;AAEjD,sBAAsB,OAAe;IACnC,MAAM,IAAI,KAAK,CAAC,qCAAqC,OAAO,IAAI,CAAC,CAAC;AACpE,CAAC;AAED,qCAAqC,gBAAgB;IACnD,kBAAkB,KAAa,MAAM,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;IAC1E,UAAU,CAAC,EAAO,IAAU,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;IACzD,YAAY,CAAC,EAAO,IAAU,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAC7D,IAAI,QAAQ,KAAa,MAAM,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1D,IAAI,MAAM,KAAa,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,KAAa,MAAM,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,CAAC,KAAU,EAAE,KAAa,EAAE,GAAW,IAAU,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAC5F,SAAS,CAAC,KAAU,EAAE,KAAa,EAAE,GAAW,IAAU,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;IACtF,OAAO,KAAW,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;IAC5C,IAAI,KAAW,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AACxC,CAAC;AAED;;;;;GAKG;AACH,OAAO,MAAM,yBAAyB,GAA2C;IAC/E,yBAAyB;IACzB,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAC;IACzE,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAC;CAC9D,CAAC;AAEF,MAAM,wBAAwB,GAAU;IACtC,yBAAyB;IACzB,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,qCAAqC,EAAC;CAC5E,CAAC;AAGF;IACE,gBAAgB,CAAC,WAAW,EAAE,CAAC;IAC/B,OAAO,EAAE,CAAC;AACZ,CAAC;AAED;;GAEG;AACH,OAAO,MAAM,cAAc,GAAG,qBAAqB,CAAC,QAAQ,EAAE,yBAAyB,CAAC,CAAC;AAEzF;;;;GAIG;AACH,OAAO,MAAM,qBAAqB,GAC9B,qBAAqB,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC;AAErE;;;;;;;;;;;;;;;;;GAiBG;AACH,gCACI,gBAAsB,EACtB,SAAiD;IACnD,OAAO,CAAC,IAAI,CACR,2HAA2H,CAAC,CAAC;IACjI,SAAS,CAAC,sBAAsB,GAAG,IAAI,sBAAsB,EAAE,CAAC;IAChE,IAAI,WAAW,GAAG,kBAAkB,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC5F,MAAM,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common';\nimport {CompilerFactory, ComponentRef, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, Type, assertPlatform, coreLoadAndBootstrap, createPlatform, createPlatformFactory, getPlatform} from '@angular/core';\nimport {BROWSER_DYNAMIC_TEST_COMPILER_FACTORY} from '@angular/platform-browser-dynamic/testing';\n\nimport {ReflectionCapabilities, reflector, wtfInit} from '../core_private';\n\nimport {Parse5DomAdapter} from './parse5_adapter';\n\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nclass ServerPlatformLocation extends PlatformLocation {\n  getBaseHrefFromDOM(): string { throw notSupported('getBaseHrefFromDOM'); };\n  onPopState(fn: any): void { notSupported('onPopState'); };\n  onHashChange(fn: any): void { notSupported('onHashChange'); };\n  get pathname(): string { throw notSupported('pathname'); }\n  get search(): string { throw notSupported('search'); }\n  get hash(): string { throw notSupported('hash'); }\n  replaceState(state: any, title: string, url: string): void { notSupported('replaceState'); };\n  pushState(state: any, title: string, url: string): void { notSupported('pushState'); };\n  forward(): void { notSupported('forward'); };\n  back(): void { notSupported('back'); };\n}\n\n/**\n * A set of providers to initialize the Angular platform in a server.\n *\n * Used automatically by `serverBootstrap`, or can be passed to `platform`.\n * @experimental\n */\nexport const SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  PLATFORM_COMMON_PROVIDERS,\n  {provide: PLATFORM_INITIALIZER, useValue: initParse5Adapter, multi: true},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation},\n];\n\nconst SERVER_DYNAMIC_PROVIDERS: any[] = [\n  SERVER_PLATFORM_PROVIDERS,\n  {provide: CompilerFactory, useValue: BROWSER_DYNAMIC_TEST_COMPILER_FACTORY},\n];\n\n\nfunction initParse5Adapter() {\n  Parse5DomAdapter.makeCurrent();\n  wtfInit();\n}\n\n/**\n * @experimental\n */\nexport const serverPlatform = createPlatformFactory('server', SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const serverDynamicPlatform =\n    createPlatformFactory('serverDynamic', SERVER_DYNAMIC_PROVIDERS);\n\n/**\n * Used to bootstrap Angular in server environment (such as node).\n *\n * This version of bootstrap only creates platform injector and does not define anything for\n * application injector. It is expected that application providers are imported from other\n * packages such as `@angular/platform-browser` or `@angular/platform-browser-dynamic`.\n *\n * ```\n * import {BROWSER_APP_PROVIDERS} from '@angular/platform-browser';\n * import {BROWSER_APP_COMPILER_PROVIDERS} from '@angular/platform-browser-dynamic';\n *\n * serverBootstrap(..., [BROWSER_APP_PROVIDERS, BROWSER_APP_COMPILER_PROVIDERS])\n * ```\n *\n * @deprecated create an {@link AppModule} and use {@link bootstrapModule} with the {@link\n * serverDynamicPlatform}()\n * instead.\n */\nexport function serverBootstrap(\n    appComponentType: Type,\n    providers: Array<any /*Type | Provider | any[]*/>): Promise<ComponentRef<any>> {\n  console.warn(\n      'serverBootstrap is deprecated. Create an @AppModule and use `bootstrapModule` with the `serverDynamicPlatform()` instead.');\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n  var appInjector = ReflectiveInjector.resolveAndCreate(providers, serverPlatform().injector);\n  return coreLoadAndBootstrap(appComponentType, appInjector);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}