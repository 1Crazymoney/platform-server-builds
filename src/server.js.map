{"version":3,"sources":["../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"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","file":"server.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common/index';\nimport {platformCoreDynamic} from '@angular/compiler/index';\nimport {Injectable, NgModule, PLATFORM_INITIALIZER, PlatformRef, Provider, RootRenderer, createPlatformFactory, isDevMode, platformCore} from '@angular/core/index';\nimport {BrowserModule} from '@angular/platform-browser/index';\n\nimport {Parse5DomAdapter} from './parse5_adapter';\nimport {DebugDomRootRenderer} from './private_import_core';\nimport {SharedStylesHost} from './private_import_platform-browser';\nimport {ServerRootRenderer} from './server_renderer';\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\nclass ServerPlatformLocation extends PlatformLocation {\n/**\n * @return {?}\n */\ngetBaseHrefFromDOM(): string { throw notSupported('getBaseHrefFromDOM'); };\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: any): void { notSupported('onPopState'); };\n/**\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: any): void { notSupported('onHashChange'); };\n/**\n * @return {?}\n */\nget pathname(): string { throw notSupported('pathname'); }\n/**\n * @return {?}\n */\nget search(): string { throw notSupported('search'); }\n/**\n * @return {?}\n */\nget hash(): string { throw notSupported('hash'); }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string): void { notSupported('replaceState'); };\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string): void { notSupported('pushState'); };\n/**\n * @return {?}\n */\nforward(): void { notSupported('forward'); };\n/**\n * @return {?}\n */\nback(): void { notSupported('back'); };\n}\n\nexport const /** @type {?} */ INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: PLATFORM_INITIALIZER, useValue: initParse5Adapter, multi: true},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation},\n];\n/**\n * @return {?}\n */\nfunction initParse5Adapter() {\n  Parse5DomAdapter.makeCurrent();\n}\n/**\n * @param {?} rootRenderer\n * @return {?}\n */\nexport function _createConditionalRootRenderer(rootRenderer: any) {\n  if (isDevMode()) {\n    return new DebugDomRootRenderer(rootRenderer);\n  }\n  return rootRenderer;\n}\n\nexport const /** @type {?} */ SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRootRenderer,\n  {provide: RootRenderer, useFactory: _createConditionalRootRenderer, deps: [ServerRootRenderer]},\n  // use plain SharedStylesHost, not the DomSharedStylesHost\n  SharedStylesHost\n];\n/**\n * The ng module for the server.\n * \n * \\@experimental\n */\nexport class ServerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [BrowserModule], providers: SERVER_RENDER_PROVIDERS}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nServerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerModule.ctorParameters;\n}\n\n\n/**\n * @experimental\n */\nexport const /** @type {?} */ platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const /** @type {?} */ platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}