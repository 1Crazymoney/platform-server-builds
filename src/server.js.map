{"version":3,"sources":["../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"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","file":"server.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common';\nimport {platformCoreDynamic} from '@angular/compiler';\nimport {InjectionToken, Injector, NgModule, PLATFORM_INITIALIZER, PlatformRef, Provider, RENDERER_V2_DIRECT, RendererV2, RootRenderer, createPlatformFactory, isDevMode, platformCore} from '@angular/core';\nimport {BrowserModule, DOCUMENT} from '@angular/platform-browser';\n\nimport {ServerPlatformLocation} from './location';\nimport {Parse5DomAdapter, parseDocument} from './parse5_adapter';\nimport {PlatformState} from './platform_state';\nimport {DebugDomRendererV2, DebugDomRootRenderer} from './private_import_core';\nimport {SharedStylesHost, getDOM} from './private_import_platform-browser';\nimport {ServerRendererV2, ServerRootRenderer} from './server_renderer';\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nexport const /** @type {?} */ INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: DOCUMENT, useFactory: _document, deps: [Injector]},\n  {provide: PLATFORM_INITIALIZER, useFactory: initParse5Adapter, multi: true, deps: [Injector]},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation},\n  PlatformState,\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initParse5Adapter(injector: Injector) {\n  return () => { Parse5DomAdapter.makeCurrent(); };\n}\n/**\n * @param {?} rootRenderer\n * @return {?}\n */\nexport function _createConditionalRootRenderer(rootRenderer: any) {\n  return isDevMode() ? new DebugDomRootRenderer(rootRenderer) : rootRenderer;\n}\n/**\n * @param {?} renderer\n * @return {?}\n */\nexport function _createDebugRendererV2(renderer: RendererV2): RendererV2 {\n  return isDevMode() ? new DebugDomRendererV2(renderer) : renderer;\n}\n\nexport const /** @type {?} */ SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRootRenderer, {provide: RENDERER_V2_DIRECT, useClass: ServerRendererV2},\n  {provide: RendererV2, useFactory: _createDebugRendererV2, deps: [RENDERER_V2_DIRECT]},\n  {provide: RootRenderer, useFactory: _createConditionalRootRenderer, deps: [ServerRootRenderer]},\n  // use plain SharedStylesHost, not the DomSharedStylesHost\n  SharedStylesHost\n];\n\n/**\n * Config object passed to initialize the platform.\n *\n * @experimental\n */\nexport interface PlatformConfig {\n  document?: string;\n  url?: string;\n}\n\n/**\n * The DI token for setting the initial config for the platform.\n *\n * @experimental\n */\nexport const /** @type {?} */ INITIAL_CONFIG = new InjectionToken<PlatformConfig>('Server.INITIAL_CONFIG');\n/**\n * The ng module for the server.\n * \n * \\@experimental\n */\nexport class ServerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserModule],\n  providers: [\n    SERVER_RENDER_PROVIDERS,\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nServerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerModule.ctorParameters;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction _document(injector: Injector) {\n  let /** @type {?} */ config: PlatformConfig|null = injector.get(INITIAL_CONFIG, null);\n  if (config && config.document) {\n    return parseDocument(config.document);\n  } else {\n    return getDOM().createHtmlDocument();\n  }\n}\n\n/**\n * @experimental\n */\nexport const /** @type {?} */ platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const /** @type {?} */ platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}