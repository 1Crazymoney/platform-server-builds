{"version":3,"sources":["../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,gBAAE,EAAgB,MAAA,uBAAA,CAAA;AACzB,OAAO,EAAA,mBAAE,EAAmB,MAAA,yBAAA,CAAA;AAC5B,OAAO,EAAa,QAAA,EAAU,oBAAA,EAA6C,YAAA,EAAc,qBAAA,EAAuB,SAAA,EAAW,YAAA,EAAa,MAAA,qBAAA,CAAA;AACxI,OAAO,EAAA,aAAE,EAAa,MAAA,iCAAA,CAAA;AAEtB,OAAO,EAAA,sBAAE,EAAsB,MAAA,YAAA,CAAA;AAC/B,OAAO,EAAA,gBAAE,EAAgB,MAAA,kBAAA,CAAA;AACzB,OAAO,EAAA,oBAAE,EAAoB,MAAA,uBAAA,CAAA;AAC7B,OAAO,EAAa,gBAAA,EAAiB,MAAA,mCAAA,CAAA;AACrC,OAAO,EAAA,kBAAE,EAAkB,MAAA,mBAAA,CAAA;AAC3B;;;GAGG;AACH,sBAFC,OAAA;IAGC,MAFM,IAAI,KAAA,CAAM,qCAAC,OAAqC,IAAO,CAAI,CAAC;AAGpE,CAAC;AAED,MAAI,CAFG,MAAA,gBAAA,CAAM,kCAAA,GAA6E;IAGxF,EAAC,OAFC,EAAQ,oBAAA,EAAsB,QAAA,EAAU,iBAAA,EAAmB,KAAA,EAAO,IAAA,EAAK;IAGzE,EAAC,OAFC,EAAQ,gBAAA,EAAkB,QAAA,EAAU,sBAAA,EAAuB;CAG9D,CAFC;AAGF;;GAEG;AACH;IACE,gBAAc,CAJG,WAAC,EAAW,CAAE;AAKjC,CAAC;AACD;;;GAGE;AACF,MANC,yCAAA,YAAA;IAOC,EAAE,CAAC,CAAC,SANC,EAAS,CAAE,CAAC,CAAA;QAOf,MAAM,CANC,IAAI,oBAAA,CAAqB,YAAC,CAAY,CAAC;IAOhD,CAAC;IACD,MAAM,CANC,YAAA,CAAa;AAOtB,CAAC;AAED,MAAM,CANC,MAAA,gBAAA,CAAM,uBAAA,GAAsC;IAOjD,kBAAkB;IAClB,EAAC,OANC,EAAQ,YAAA,EAAc,UAAA,EAAY,8BAAA,EAAgC,IAAA,EAAM,CAAA,kBAAE,CAAkB,EAAC;IAO/F,0DAA0D;IAC1D,gBAAgB;CACjB,CANC;AAOF;;;;GAIG;AACH,MAJC;;AACM,uBAAA,GAAoC;IAK3C,EAJE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA,EAAE,OAAC,EAAQ,CAAA,aAAE,CAAa,EAAE,SAAA,EAAW,uBAAA,EAAwB,EAAC,EAAG;CAK1F,CAJC;AAKF,kBAAkB;AAHX,2BAAA,GAAiF,MAAM,EAK7F,CAJC;AAOF;IACA,gBAAgB;IAChB,YAAY,CAAC,UAAU,CAAC;IACxB;;;OAGG;IACH,YANO,CAAM,cAAA,CAAA;AAOb,CAAC;AAGD;;GAEG;AACH,MAAM,CArBC,MAAA,gBAAA,CAAM,cAAA,GAsBT,qBAAqB,CArBC,YAAC,EAAa,QAAA,EAAU,kCAAA,CAAmC,CAAC;AAuBtF;;;;GAIG;AACH,MAAM,CArBC,MAAA,gBAAA,CAAM,qBAAA,GAsBT,qBAAqB,CArBC,mBAAC,EAAoB,eAAA,EAAiB,kCAAA,CAAmC,CAAC","file":"server.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common/index';\nimport {platformCoreDynamic} from '@angular/compiler/index';\nimport {Injectable, NgModule, PLATFORM_INITIALIZER, PlatformRef, Provider, RootRenderer, createPlatformFactory, isDevMode, platformCore} from '@angular/core/index';\nimport {BrowserModule} from '@angular/platform-browser/index';\n\nimport {ServerPlatformLocation} from './location';\nimport {Parse5DomAdapter} from './parse5_adapter';\nimport {DebugDomRootRenderer} from './private_import_core';\nimport {DomAdapter, SharedStylesHost} from './private_import_platform-browser';\nimport {ServerRootRenderer} from './server_renderer';\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nexport const /** @type {?} */ INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: PLATFORM_INITIALIZER, useValue: initParse5Adapter, multi: true},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation},\n];\n/**\n * @return {?}\n */\nfunction initParse5Adapter() {\n  Parse5DomAdapter.makeCurrent();\n}\n/**\n * @param {?} rootRenderer\n * @return {?}\n */\nexport function _createConditionalRootRenderer(rootRenderer: any) {\n  if (isDevMode()) {\n    return new DebugDomRootRenderer(rootRenderer);\n  }\n  return rootRenderer;\n}\n\nexport const /** @type {?} */ SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRootRenderer,\n  {provide: RootRenderer, useFactory: _createConditionalRootRenderer, deps: [ServerRootRenderer]},\n  // use plain SharedStylesHost, not the DomSharedStylesHost\n  SharedStylesHost\n];\n/**\n * The ng module for the server.\n * \n * \\@experimental\n */\nexport class ServerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [BrowserModule], providers: SERVER_RENDER_PROVIDERS}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nServerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerModule.ctorParameters;\n}\n\n\n/**\n * @experimental\n */\nexport const /** @type {?} */ platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const /** @type {?} */ platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}